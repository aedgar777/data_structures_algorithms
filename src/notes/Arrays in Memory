

Arrays occupy a contiguous block of memory, which is why you have to declare their size when you create them.

Every element of an array occupies the same amount of space in an array. Arrays of objects are actually just arrays of references to objects elsewhere in memory

If an array starts at memory address xm and the size of each element in the array is y, we can calculate the memory address of the ith element
with x+i*y

If we know the index of an element, the time to retrieve the element will be the same to matter where it is in the array, thanks to that formula. (O(1) time complexity)

If an algo requires looping through a single array, its linear time, if you know the index, it's constant.

If two elements have the same value and their position relative to each other changes during the sort, the algorithm is said to be unstable.
If their relative position doesn't, the algorithm is said to be stable. This can be significant if doing multiple sorts of objects by different properties.

